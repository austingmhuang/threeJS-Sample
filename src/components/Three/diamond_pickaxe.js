/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useThree } from '@react-three/fiber'
import { useGesture } from '@use-gesture/react'
import { useSpring, animated } from '@react-spring/three'

export default function Model(props) {
  const group = useRef()
  const { size, viewport } = useThree()
  const aspect = size.width / viewport.width
  const [spring, set] = useSpring(() => ({
    scale: [1, 1, 1],
    position: [0, 0, 0],
    rotation: [0, 0, 0],
    config: { friction: 10 },
  }))

  const bind = useGesture({
    onDrag: ({ offset: [x, y] }) =>
      set({
        position: [x / aspect, -y / aspect, 0],
        rotation: [y / aspect, x / aspect, 0],
      }),
    onHover: ({ hovering }) =>
      set({ scale: hovering ? [1.2, 1.2, 1.2] : [1, 1, 1] }),
  })
  const { nodes, materials } = useGLTF('/minecraft_diamond-pickaxe.glb')
  return (
    <animated.group
      ref={group}
      {...spring}
      {...bind()}
      {...props}
      dispose={null}
    >
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          position={[0, -5, 0]}
          scale={[0.11, 0.11, 0.11]}
          castShadow
          receiveShadow
          geometry={nodes.mesh_0.geometry}
          material={materials['Material.009']}
        />
      </group>
    </animated.group>
  )
}

useGLTF.preload('/minecraft_diamond-pickaxe.glb')
